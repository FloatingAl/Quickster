{"ast":null,"code":"import _regeneratorRuntime from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar duration;\nexport function getDuration(apikey, A, B) {\n  var origin = A;\n  var destination = B;\n  var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  var url = proxyUrl + 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=' + origin + '&destinations=' + destination + '&key=' + apikey;\n  fetch(url).then(function (response) {\n    return response.json();\n  }).then(function (myJson) {\n    duration = myJson.rows[0].elements[0].duration.value; //duration = checkVar(duration);\n    //duration = myJson.rows[0].elements[0].duration.value;\n    //duration = checkVar(duration);\n\n    console.log(\"duration is \" + duration);\n    setTimeout(function () {\n      return duration;\n    }, 4000);\n  }); //return duration;            \n}\nexport function getDur(_x, _x2, _x3) {\n  return _getDur.apply(this, arguments);\n}\n\nfunction _getDur() {\n  _getDur = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(apikey, A, B) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            exports.getdata = function (data) {\n              fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                console.log('parsed json', json);\n                return json;\n              }).catch(function (ex) {\n                console.log('parsing failed', ex);\n              });\n            };\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getDur.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/liamreynolds/Documents/GitHub/Quickster/src/js/duration.js"],"names":["duration","getDuration","apikey","A","B","origin","destination","proxyUrl","url","fetch","then","response","json","myJson","rows","elements","value","console","log","setTimeout","getDur","exports","getdata","data","catch","ex"],"mappings":";;AAAA,IAAIA,QAAJ;AAEA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmC;AACxC,MAAIC,MAAM,GAAGF,CAAb;AACA,MAAIG,WAAW,GAAGF,CAAlB;AACA,MAAIG,QAAQ,GAAG,sCAAf;AACA,MAAIC,GAAG,GAAGD,QAAQ,GAAG,mEAAX,GACNF,MADM,GACG,gBADH,GACsBC,WADtB,GACoC,OADpC,GAC8CJ,MADxD;AAGEO,EAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADR,EAEGF,IAFH,CAEQ,UAASG,MAAT,EAAiB;AACrBb,IAAAA,QAAQ,GAAGa,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeC,QAAf,CAAwB,CAAxB,EAA2Bf,QAA3B,CAAoCgB,KAA/C,CADqB,CAErB;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBlB,QAA7B;AACAmB,IAAAA,UAAU,CAAC,YAAU;AAAC,aAAOnB,QAAP;AAAgB,KAA5B,EAA8B,IAA9B,CAAV;AACD,GATH,EAPsC,CAiBtC;AACH;AAED,gBAAsBoB,MAAtB;AAAA;AAAA;;;;;2BAAO,iBAAsBlB,MAAtB,EAA8BC,CAA9B,EAAiCC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAELiB,YAAAA,OAAO,CAACC,OAAR,GAAkB,UAACC,IAAD,EAAU;AAC1Bd,cAAAA,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACK,UAASC,QAAT,EAAmB;AACvB,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,eAHA,EAGEF,IAHF,CAGO,UAASE,IAAT,EAAe;AACrBK,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,IAA3B;AACA,uBAAOA,IAAP;AACD,eANA,EAMEY,KANF,CAMQ,UAASC,EAAT,EAAa;AACpBR,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,EAA9B;AACD,eARA;AASF,aAVA;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["var duration;\n\nexport function getDuration(apikey, A, B) {\n  var origin = A;\n  var destination = B;\n  var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  var url = proxyUrl + 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=' \n    + origin + '&destinations=' + destination + '&key=' + apikey;\n    \n    fetch(url)\n      .then((response) => response.json())\n      .then(function(myJson) {\n        duration = myJson.rows[0].elements[0].duration.value;\n        //duration = checkVar(duration);\n        //duration = myJson.rows[0].elements[0].duration.value;\n        //duration = checkVar(duration);\n        console.log(\"duration is \" + duration);\n        setTimeout(function(){return duration}, 4000);\n      });\n    //return duration;            \n}\n\nexport async function getDur(apikey, A, B){\n  \n  exports.getdata = (data) => {\n    fetch(url)\n   .then(function(response) {\n     return response.json()\n   }).then(function(json) {\n     console.log('parsed json', json);\n     return json;\n   }).catch(function(ex) {\n     console.log('parsing failed', ex)\n   })\n };\n}"]},"metadata":{},"sourceType":"module"}