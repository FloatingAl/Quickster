{"ast":null,"code":"import _classCallCheck from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js\";\nimport React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nexport var ButtonToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonToggle, _Component);\n\n  function ButtonToggle(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonToggle).call(this, props)); // this.toggle = this.toggle.bind(this);\n\n    _this.toggle = function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    };\n\n    _this.toggleButton1 = function () {\n      _this.setState({\n        on: !_this.state.on,\n        on2: _this.state.on,\n        on3: _this.state.on,\n        on4: _this.state.on,\n        currentClick: 1\n      });\n    };\n\n    _this.toggleButton2 = function () {\n      _this.setState({\n        on: !_this.state.on,\n        on2: !_this.state.on,\n        on3: _this.state.on,\n        on4: _this.state.on,\n        currentClick: 2\n      });\n    };\n\n    _this.toggleButton3 = function () {\n      _this.setState({\n        on: !_this.state.on,\n        on2: !_this.state.on,\n        on3: !_this.state.on,\n        on4: _this.state.on,\n        currentClick: 3\n      });\n    };\n\n    _this.toggleButton4 = function () {\n      _this.setState({\n        on: !_this.state.on,\n        on2: !_this.state.on,\n        on3: !_this.state.on,\n        on4: !_this.state.on,\n        currentClick: 4\n      });\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      msg: props.message,\n      numItems: 4,\n      currentClick: 0,\n      on: false,\n      on2: false,\n      on3: false,\n      on4: false\n    };\n    return _this;\n  }\n\n  _createClass(ButtonToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var message = this.props.message;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Please choose the amount of address:\"), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, message), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, Array(this.state.numItems).fill(0).map(function (_, i) {\n        return React.createElement(DropdownItem, {\n          key: i,\n          onClick: _this2.toggleButton + (i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, i + 1);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, Array(this.state.curre).fill(0).map(function (_, x) {\n        return React.createElement(Input, {\n          placeholder: \"Address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return ButtonToggle;\n}(Component);","map":{"version":3,"sources":["/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js"],"names":["React","Component","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupAddon","InputGroupText","Input","ButtonToggle","props","toggle","setState","dropdownOpen","state","toggleButton1","on","on2","on3","on4","currentClick","toggleButton2","toggleButton3","toggleButton4","msg","message","numItems","console","log","Array","fill","map","_","i","toggleButton","curre","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nexport class ButtonToggle extends Component {\n    constructor(props) {\n        super(props);\n    \n        // this.toggle = this.toggle.bind(this);\n        this.state = {\n          dropdownOpen: false,\n          msg: props.message,\n          numItems : 4,\n          currentClick: 0,\n          on: false,\n          on2: false,\n          on3: false,\n          on4: false,\n        };\n      }\n    \n    toggle = () =>  {\n        \n      this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n      }\n\n    toggleButton1 = () => {\n        this.setState({\n            on: !this.state.on,\n            on2: this.state.on,\n            on3: this.state.on,\n            on4: this.state.on,\n            currentClick: 1,\n        });\n    }\n\n    toggleButton2 = () => {\n        this.setState({\n            on: !this.state.on,\n            on2:!this.state.on,\n            on3: this.state.on,\n            on4: this.state.on,\n            currentClick: 2,\n        });\n    }\n\n    toggleButton3 = () => {\n        this.setState({\n            on: !this.state.on,\n            on2:!this.state.on,\n            on3:!this.state.on,\n            on4: this.state.on,\n\n            currentClick: 3,\n        });\n    }\n\n    toggleButton4 = () => {\n        this.setState({\n            on: !this.state.on,\n            on2:!this.state.on,\n            on3:!this.state.on,\n            on4:!this.state.on,\n            currentClick: 4,\n        });\n    }\n\n  render() {\n      const {message} = this.props\n      console.log(this.props)\n    return (\n      <div>\n        <p>Please choose the amount of address:</p>\n        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          {message}\n        </DropdownToggle>\n        <DropdownMenu>\n            {\n                Array(this.state.numItems).fill(0).map( (_, i) => <DropdownItem key={i} onClick={this.toggleButton + (i+1)} >{i + 1 }</DropdownItem>)\n            }\n          {/* <DropdownItem onClick ={this}>1</DropdownItem>\n          <DropdownItem>2</DropdownItem>\n          <DropdownItem>3</DropdownItem>\n          <DropdownItem>4</DropdownItem> */}\n        </DropdownMenu>\n      </ButtonDropdown>\n         <div>\n               {\n                   Array(this.state.curre).fill(0).map( (_,x) => <Input placeholder=\"Address\"></Input>)\n               } \n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}