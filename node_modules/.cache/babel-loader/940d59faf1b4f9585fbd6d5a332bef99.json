{"ast":null,"code":"import _classCallCheck from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js\";\nimport React, { Component } from 'react';\nimport './ButtonToggle.css';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'; //import { Input } from 'reactstrap';\n//import { Container, Segment} from \"semantic-ui-react\";\n//import PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\n\nimport { GoogleComponent } from 'react-google-location';\nimport apikey from './google_api_key';\nexport var ButtonToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonToggle, _Component);\n\n  function ButtonToggle(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonToggle).call(this, props)); // this.toggle = this.toggle.bind(this);\n\n    _this.toggle = function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    };\n\n    _this.toggleButton1 = function () {\n      _this.setState({\n        on: true,\n        on2: false,\n        on3: false,\n        on4: false,\n        currentClick: 1\n      });\n    };\n\n    _this.toggleButton2 = function () {\n      _this.setState({\n        on: true,\n        on2: true,\n        on3: false,\n        on4: false,\n        currentClick: 2\n      });\n    };\n\n    _this.toggleButton3 = function () {\n      _this.setState({\n        on: true,\n        on2: true,\n        on3: true,\n        on4: false,\n        currentClick: 3\n      });\n    };\n\n    _this.toggleButton4 = function () {\n      _this.setState({\n        on: true,\n        on2: true,\n        on3: true,\n        on4: true,\n        currentClick: 4\n      });\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      msg: props.message,\n      numItems: 4,\n      currentClick: 0,\n      on: false,\n      on2: false,\n      on3: false,\n      on4: false,\n      start: null,\n      first: null,\n      second: null,\n      third: null,\n      fourth: null\n    };\n    return _this;\n  }\n\n  _createClass(ButtonToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var message = this.props.message;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Please enter a starting address\"), React.createElement(GoogleComponent, {\n        id: \"inputStart\",\n        apiKey: apikey,\n        language: 'en',\n        country: 'country:in|country:us',\n        coordinates: true,\n        locationBoxStyle: 'input',\n        locationListStyle: 'slide',\n        onChange: function onChange(e) {\n          _this2.setState({\n            start: e\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Please choose the amount of address:\"), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, message), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: this.toggleButton1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"1\"), React.createElement(DropdownItem, {\n        onClick: this.toggleButton2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"2\"), React.createElement(DropdownItem, {\n        onClick: this.toggleButton3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"3\"), React.createElement(DropdownItem, {\n        onClick: this.toggleButton4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"4\"))), React.createElement(\"div\", {\n        className: \"inputG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.on && React.createElement(GoogleComponent, {\n        apiKey: apikey,\n        id: \"input1\",\n        language: 'en',\n        country: 'country:in|country:us',\n        coordinates: true,\n        locationBoxStyle: 'inputA',\n        locationListStyle: 'slide',\n        onChange: function onChange(e) {\n          _this2.setState({\n            first: e\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), this.state.on2 && React.createElement(GoogleComponent, {\n        apiKey: apikey,\n        id: \"input2\",\n        language: 'en',\n        country: 'country:in|country:us',\n        coordinates: true,\n        locationBoxStyle: 'inputA',\n        locationListStyle: 'slide',\n        onChange: function onChange(e) {\n          _this2.setState({\n            second: e\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.state.on3 && React.createElement(GoogleComponent, {\n        apiKey: apikey,\n        id: \"input3\",\n        language: 'en',\n        country: 'country:in|country:us',\n        coordinates: true,\n        locationBoxStyle: 'inputA',\n        locationListStyle: 'slide',\n        onChange: function onChange(e) {\n          _this2.setState({\n            third: e\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.state.on4 && React.createElement(GoogleComponent, {\n        apiKey: apikey,\n        id: \"input4\",\n        language: 'en',\n        country: 'country:in|country:us',\n        coordinates: true,\n        locationBoxStyle: 'inputA',\n        locationListStyle: 'slide',\n        onChange: function onChange(e) {\n          _this2.setState({\n            fourth: e\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return ButtonToggle;\n}(Component); // //Source: https://github.com/hibiken/react-places-autocomplete?fbclid=IwAR03LOgSodZOcy2mxnpt7XjGlGT0cc7w5HXd-eNeAOy25Oi3sgyvSL9R-3Q\n// class LocationSearchInput extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { address: '' };\n//   }\n//   handleChange = address => {\n//     this.setState({ address });\n//   };\n//   handleSelect = address => {\n//     geocodeByAddress(address)\n//       .then(results => getLatLng(results[0]))\n//       .then(latLng => console.log('Success', latLng))\n//       .catch(error => console.error('Error', error));\n//   };\n//   render() {\n//     return (\n//       <PlacesAutocomplete\n//         value={this.state.address}\n//         onChange={this.handleChange}\n//         onSelect={this.handleSelect}\n//       >\n//         {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//           <div>\n//             <input\n//               {...getInputProps({\n//                 placeholder: 'Search Places ...',\n//                 className: 'location-search-input',\n//               })}\n//             />\n//             <div className=\"autocomplete-dropdown-container\">\n//               {loading && <div>Loading...</div>}\n//               {suggestions.map(suggestion => {\n//                 const className = suggestion.active\n//                   ? 'suggestion-item--active'\n//                   : 'suggestion-item';\n//                 // inline style for demonstration purpose\n//                 const style = suggestion.active\n//                   ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n//                   : { backgroundColor: '#ffffff', cursor: 'pointer' };\n//                 return (\n//                   <div\n//                     {...getSuggestionItemProps(suggestion, {\n//                       className,\n//                       style,\n//                     })}\n//                   >\n//                     <span>{suggestion.description}</span>\n//                   </div>\n//                 );\n//               })}\n//             </div>\n//           </div>\n//         )}\n//       </PlacesAutocomplete>\n//     );\n//   }\n// }\n\nfunction checker() {}","map":{"version":3,"sources":["/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js"],"names":["React","Component","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","GoogleComponent","apikey","ButtonToggle","props","toggle","setState","dropdownOpen","state","toggleButton1","on","on2","on3","on4","currentClick","toggleButton2","toggleButton3","toggleButton4","msg","message","numItems","start","first","second","third","fourth","console","log","e","checker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ButtonToggle.css';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n//import { Input } from 'reactstrap';\n//import { Container, Segment} from \"semantic-ui-react\";\n//import PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\nimport { GoogleComponent } from 'react-google-location' \nimport apikey from './google_api_key'\n\nexport class ButtonToggle extends Component {\n    constructor(props) {\n        super(props);\n    \n        // this.toggle = this.toggle.bind(this);\n        this.state = {\n          dropdownOpen: false,\n          msg: props.message,\n          numItems : 4,\n          currentClick: 0,\n          on: false,\n          on2: false,\n          on3: false,\n          on4: false,\n          start: null,\n          first: null,\n          second: null,\n          third: null,\n          fourth: null,\n        };\n      }\n    \n    toggle = () =>  {\n        \n      this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n      }\n\n    toggleButton1 = () => {\n        this.setState({\n            on:  true,\n            on2: false,\n            on3: false,\n            on4: false,\n            currentClick: 1,\n        });\n    }\n\n    toggleButton2 = () => {\n        this.setState({\n            on: true,\n            on2: true,\n            on3: false,\n            on4: false,\n            currentClick: 2,\n        });\n\n        \n    }\n\n    toggleButton3 = () => {\n        this.setState({\n            on: true,\n            on2:true,\n            on3:true,\n            on4:false,\n            currentClick: 3,\n        });\n    }\n\n    toggleButton4 = () => {\n        this.setState({\n            on: true,\n            on2:true,\n            on3:true,\n            on4:true,\n            currentClick: 4,\n        });\n    }\n\n  render() {\n      const {message} = this.props\n      console.log(this.props)\n    return (\n      <div>\n        <h2>Please enter a starting address</h2>\n        {/* <Input className= \"input\" id = \"inputStart\" placeholder=\"Starting Address\"></Input> */}\n        <GoogleComponent\n            id = \"inputStart\"\n            apiKey={apikey}\n            language={'en'}\n            country={'country:in|country:us'}\n            coordinates={true}\n            locationBoxStyle={'input'}\n            locationListStyle={'slide'}\n            onChange={(e) => { this.setState({ start: e }) }} />\n        <p>Please choose the amount of address:</p>\n        \n        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          {message}\n        </DropdownToggle>\n        <DropdownMenu>\n            {/* {\n                Array(this.state.numItems).fill(0).map( (_, i) => <DropdownItem key={i} onClick={this.toggleButton} >{i + 1 }</DropdownItem>)\n            } */}\n          <DropdownItem onClick ={this.toggleButton1}>1</DropdownItem>\n          <DropdownItem onClick ={this.toggleButton2}>2</DropdownItem>\n          <DropdownItem onClick ={this.toggleButton3}>3</DropdownItem>\n          <DropdownItem onClick ={this.toggleButton4}>4</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n         <div className =\"inputG\">\n             {this.state.on && <GoogleComponent \n             apiKey={apikey} \n             id = \"input1\" language={'en'} country={'country:in|country:us'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             onChange={(e) => { this.setState({ first: e }) }} />}\n\n            {this.state.on2 && <GoogleComponent \n             apiKey={apikey} \n             id = \"input2\" language={'en'} country={'country:in|country:us'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             onChange={(e) => { this.setState({ second: e }) }} />}\n\n            {this.state.on3 && <GoogleComponent \n             apiKey={apikey} \n             id = \"input3\" language={'en'} country={'country:in|country:us'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             onChange={(e) => { this.setState({ third: e }) }} />}\n\n            {this.state.on4 && <GoogleComponent \n             apiKey={apikey} \n             id = \"input4\" language={'en'} country={'country:in|country:us'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             onChange={(e) => { this.setState({ fourth: e }) }} />}\n        </div>\n\n        <button type=\"submit\">\n        Submit\n        </button>\n      </div>\n    )\n  }\n} \n\n// //Source: https://github.com/hibiken/react-places-autocomplete?fbclid=IwAR03LOgSodZOcy2mxnpt7XjGlGT0cc7w5HXd-eNeAOy25Oi3sgyvSL9R-3Q\n// class LocationSearchInput extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { address: '' };\n//   }\n\n//   handleChange = address => {\n//     this.setState({ address });\n//   };\n\n//   handleSelect = address => {\n//     geocodeByAddress(address)\n//       .then(results => getLatLng(results[0]))\n//       .then(latLng => console.log('Success', latLng))\n//       .catch(error => console.error('Error', error));\n//   };\n\n//   render() {\n//     return (\n//       <PlacesAutocomplete\n//         value={this.state.address}\n//         onChange={this.handleChange}\n//         onSelect={this.handleSelect}\n//       >\n//         {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//           <div>\n//             <input\n//               {...getInputProps({\n//                 placeholder: 'Search Places ...',\n//                 className: 'location-search-input',\n//               })}\n//             />\n//             <div className=\"autocomplete-dropdown-container\">\n//               {loading && <div>Loading...</div>}\n//               {suggestions.map(suggestion => {\n//                 const className = suggestion.active\n//                   ? 'suggestion-item--active'\n//                   : 'suggestion-item';\n//                 // inline style for demonstration purpose\n//                 const style = suggestion.active\n//                   ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n//                   : { backgroundColor: '#ffffff', cursor: 'pointer' };\n//                 return (\n//                   <div\n//                     {...getSuggestionItemProps(suggestion, {\n//                       className,\n//                       style,\n//                     })}\n//                   >\n//                     <span>{suggestion.description}</span>\n//                   </div>\n//                 );\n//               })}\n//             </div>\n//           </div>\n//         )}\n//       </PlacesAutocomplete>\n//     );\n//   }\n// }\n\nfunction checker() {\n\n}"]},"metadata":{},"sourceType":"module"}