{"ast":null,"code":"import _classCallCheck from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albara/Desktop/Repositories/Quickster/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js\";\nimport React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport var ButtonToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonToggle, _Component);\n\n  function ButtonToggle(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonToggle).call(this, props)); // this.toggle = this.toggle.bind(this);\n\n    _this.toggle = function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      msg: props.message\n    };\n    return _this;\n  }\n\n  _createClass(ButtonToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          message = _this$props.message,\n          message2 = _this$props.message2;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Please choose the amount of address:\"), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, message, message2), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, Array(3).map(function (it) {\n        return React.createElement(DropdownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"[it}\");\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"1\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"2\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"3\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"4\"))));\n    }\n  }]);\n\n  return ButtonToggle;\n}(Component);","map":{"version":3,"sources":["/home/albara/Desktop/Repositories/Quickster/src/ButtonToggle.js"],"names":["React","Component","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","ButtonToggle","props","toggle","setState","dropdownOpen","state","msg","message","message2","console","log","Array","map","it"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,YAAzC,EAAuDC,YAAvD,QAA2E,YAA3E;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACI,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN,GADe,CAGf;;AAHe,UAUnBC,MAVmB,GAUV,YAAO;AACd,YAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADhB,OAAd;AAGC,KAdgB;;AAIf,UAAKC,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE,KADH;AAEXE,MAAAA,GAAG,EAAEL,KAAK,CAACM;AAFA,KAAb;AAJe;AAQhB;;AATP;AAAA;AAAA,6BAgBW;AAAA,wBACuB,KAAKN,KAD5B;AAAA,UACEM,OADF,eACEA,OADF;AAAA,UACWC,QADX,eACWA,QADX;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWD,YAAnC;AAAiD,QAAA,MAAM,EAAE,KAAKF,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIK,OAFJ,EAGIC,QAHJ,CADA,EAMA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQG,KAAK,CAAC,CAAD,CAAL,CAASC,GAAT,CAAc,UAAAC,EAAE;AAAA,eAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA,OAAhB,CAFR,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CANA,CAFF,CADF;AAqBD;AAxCH;;AAAA;AAAA,EAAkClB,SAAlC","sourcesContent":["import React, { Component } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nexport class ButtonToggle extends Component {\n    constructor(props) {\n        super(props);\n    \n        // this.toggle = this.toggle.bind(this);\n        this.state = {\n          dropdownOpen: false,\n          msg: props.message,\n        };\n      }\n    \n    toggle = () =>  {\n      this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n      }\n  render() {\n      const {message, message2} = this.props\n      console.log(this.props)\n    return (\n      <div>\n        <p>Please choose the amount of address:</p>\n        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          {/* Choose... */}\n          { message}\n          { message2}\n        </DropdownToggle>\n        <DropdownMenu>\n            {\n                Array(3).map( it => <DropdownItem >[it}</DropdownItem>)\n            }\n          <DropdownItem >1</DropdownItem>\n          <DropdownItem >2</DropdownItem>\n          <DropdownItem >3</DropdownItem>\n          <DropdownItem >4</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}