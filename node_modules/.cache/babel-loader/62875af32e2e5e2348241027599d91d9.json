{"ast":null,"code":"import _classCallCheck from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/liamreynolds/Documents/GitHub/Quickster/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liamreynolds/Documents/GitHub/Quickster/src/js/duration.jsx\";\nimport React, { Component } from 'react';\nimport { GoogleComponent } from 'react-google-location';\nimport apikey from '../google_api_key';\n\nvar Duration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Duration, _Component);\n\n  function Duration() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Duration);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Duration)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      origin1: '',\n      destination1: ''\n    };\n    return _this;\n  }\n\n  _createClass(Duration, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"durationtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \" \", this.getDuration(), \" \"));\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration(origin1, destination1) {\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      var dur;\n      fetch(proxyUrl + \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCkF2kq7ElyH4OtWelckXaKktYWqIi86dU&callback=initMap\").then(function (response) {\n        dur = response.rows[0].elements[0].duration.text;\n        console.log(dur); //return response.json();\n      });\n      /*\n      var origin1 = 'Lowell, Massachusetts';\n      var destination1 = 'Boston, Massachusetts';\n      //var service = new google.maps.DistanceMatrixService;\n      //var service = \"http://maps.googleapis.com/maps/api/distancematrix/json?origins=\" \n          //+ origin1 + \"&destination=\" + destination1 + \"&key=\" + apikey;\n      //var results = response.rows[0].elements;\n      //var distance = results[0].duration.value;\n      \n      \n      service.getDistanceMatrix({\n          origins: origin1,\n          destinations: destination1,\n          travelMode: 'DRIVING',\n          //unitSystem: google.maps.UnitSystem.METRIC,\n          avoidHighways: false,\n          avoidTolls: false\n      }, callback)\n      \n      function callback(response,status){\n          if (status == 'OK') {\n              var results = response.rows[0].elements;\n              var distance = results[0].duration.value;\n              console.log(distance);\n              return distance;\n          }\n      }\n      */\n    }\n  }]);\n\n  return Duration;\n}(Component);\n\nexport default Duration;","map":{"version":3,"sources":["/Users/liamreynolds/Documents/GitHub/Quickster/src/js/duration.jsx"],"names":["React","Component","GoogleComponent","apikey","Duration","state","origin1","destination1","getDuration","proxyUrl","dur","fetch","then","response","rows","elements","duration","text","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAG,EADN;AAEJC,MAAAA,YAAY,EAAG;AAFX,K;;;;;;6BAIC;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAG,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4B,KAAKC,WAAL,EAA5B,MADJ,CADA;AAKH;;;gCACWF,O,EAASC,Y,EAAc;AAC/B,UAAIE,QAAQ,GAAG,sCAAf;AACA,UAAIC,GAAJ;AACAC,MAAAA,KAAK,CAACF,QAAQ,GAAG,sGAAZ,CAAL,CACKG,IADL,CACU,UAASC,QAAT,EAAmB;AACrBH,QAAAA,GAAG,GAAGG,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCC,IAA5C;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ,EAFqB,CAGrB;AACH,OALL;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BH;;;;EAlDkBT,S;;AAoDvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleComponent } from 'react-google-location' \nimport apikey from '../google_api_key'\n\nclass Duration extends Component {\n\n    state = {\n        origin1 : '',\n        destination1 : ''\n    }\n    render() {\n        return(\n        <div>\n            <span id = \"durationtext\"> {this.getDuration()} </span>\n        </div>\n        )\n    }\n    getDuration(origin1, destination1) {\n        var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        var dur;\n        fetch(proxyUrl + \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCkF2kq7ElyH4OtWelckXaKktYWqIi86dU&callback=initMap\")\n            .then(function(response) {\n                dur = response.rows[0].elements[0].duration.text;\n                console.log(dur);\n                //return response.json();\n            });\n        /*\n        var origin1 = 'Lowell, Massachusetts';\n        var destination1 = 'Boston, Massachusetts';\n        //var service = new google.maps.DistanceMatrixService;\n        //var service = \"http://maps.googleapis.com/maps/api/distancematrix/json?origins=\" \n            //+ origin1 + \"&destination=\" + destination1 + \"&key=\" + apikey;\n        //var results = response.rows[0].elements;\n        //var distance = results[0].duration.value;\n        \n        \n        service.getDistanceMatrix({\n            origins: origin1,\n            destinations: destination1,\n            travelMode: 'DRIVING',\n            //unitSystem: google.maps.UnitSystem.METRIC,\n            avoidHighways: false,\n            avoidTolls: false\n        }, callback)\n        \n        function callback(response,status){\n            if (status == 'OK') {\n                var results = response.rows[0].elements;\n                var distance = results[0].duration.value;\n                console.log(distance);\n                return distance;\n            }\n        }\n     */\n    }   \n}\nexport default Duration"]},"metadata":{},"sourceType":"module"}