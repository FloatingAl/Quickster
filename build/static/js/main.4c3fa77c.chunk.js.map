{"version":3,"sources":["img/sonic.gif","google_api_key.js","js/duration.js","Files/ButtonToggle.js","App.js","Files/Map.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getDuration","_x","_x2","_x3","_getDuration","apply","this","arguments","_callee","apikey","A","B","url","regenerator_default","a","wrap","_context","prev","next","proxyUrl","fetch","then","response","json","myJson","rows","elements","duration","value","catch","error","console","log","abrupt","sent","stop","ButtonToggle","_Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","dropdownOpen","state","toggleButton1","message","on","on2","on3","currentClick","toggleButton2","toggleButton3","locations","location","start","first","second","third","loading","msg","numItems","input1","input2","input3","inherits","createClass","key","_this2","setTimeout","window","alert","mapUrl","place","open","asyncToGenerator","mark","dist1","C","_callee2","bestDur","_context2","dist2","Math","min","dist3","D","_callee3","_context3","_this3","react_default","createElement","className","id","react_google_location","type","ref","inputStart","apiKey","language","country","coordinates","locationBoxStyle","locationListStyle","placeholder","onChange","e","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","clicked","src","require","Component","App","ButtonToggle_ButtonToggle","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c3fa77c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sonic.058bc01f.gif\";","const apikey = \"AIzaSyCkF2kq7ElyH4OtWelckXaKktYWqIi86dU\";\n\nmodule.exports = apikey;","//var duration;\nexport async function getDuration(apikey, A, B){\n  \n  var duration;\n  var origin = A;\n  var destination = B;\n  var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  var url = proxyUrl + 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=' \n    + origin + '&destinations=' + destination + '&key=' + apikey;\n\n    return await fetch(url)\n    .then((response) => response.json())\n    .then(function(myJson) {\n      duration = myJson.rows[0].elements[0].duration.value;\n      return duration;\n    })\n    .catch(function(error){\n      console.log(error);\n    });\n}","import React, { Component } from 'react'\nimport '../ButtonToggle.css';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n//import { Input } from 'reactstrap';\n//import { Container, Segment} from \"semantic-ui-react\";\n//import PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\nimport { GoogleComponent } from 'react-google-location' \nimport apikey from '../google_api_key'\n//import Distance from '../Files/Distance'\nimport {getDuration} from '../js/duration'\n\nexport class ButtonToggle extends Component {\n    constructor(props) {\n        super(props);\n    \n        // this.toggle = this.toggle.bind(this);\n        this.state = {\n          message: \"Choose...\",\n          loading: false,\n          dropdownOpen: false,\n          msg: props.message,\n          numItems : 3,\n          currentClick: 0,\n          on: false,\n          on2: false,\n          on3: false,\n          start: null,\n          first: null,\n          second: null,\n          third: null,\n          input1: '',\n          input2: '',\n          input3: '',\n        };\n      }\n\n    clicked() //will open a new tab to google maps\n    {\n        this.setState({\n            loading: true,\n        });\n        setTimeout(()=> {\n            this.setState({\n                loading: false,\n            });\n        },3000)\n      //console.log(this.state.start.coordinates.lat)\n      if (this.state.currentClick == 0){\n        if(this.state.start == null)\n        {\n          window.alert(\"Please enter an address for all the boxes\");\n          return;\n        }\n        var mapUrl = \"https://www.google.com/maps/dir/\" + this.state.start.place\n        window.open(mapUrl, \"Google Maps\");\n      }\n\n      if (this.state.currentClick == 1){\n        if(this.state.start == null || this.state.first == null)\n        {\n          window.alert(\"Please enter an address for all the boxes\");\n          return;\n        }\n        mapUrl = \"https://www.google.com/maps/dir/\" + this.state.start.place + \"/\";\n        var dist1;\n        var A = this.state.start.place;\n        var B = this.state.first.place;\n\n        (async function(){\n            dist1 = await getDuration(apikey, A, B);\n            console.log(\"dist1 is \" + dist1);\n            mapUrl = mapUrl + B;\n            window.open(mapUrl, \"Google Maps\");\n          })()\n      }\n      else if (this.state.currentClick == 2) {\n        if(this.state.start == null || this.state.first == null || this.state.second == null)\n        {\n          window.alert(\"Please enter an address for all the boxes\");\n          return;\n        }\n        \n        mapUrl = \"https://www.google.com/maps/dir/\" + this.state.start.place + \"/\";\n        var dist1, dist2;\n        var A = this.state.start.place;\n        var B = this.state.first.place;\n        var C = this.state.second.place;\n\n        (async function(){\n            dist1 = await getDuration(apikey, A, B);\n            dist2 = await getDuration(apikey, A, C);\n            console.log(\"dist1 is \" + dist1);\n            console.log(\"dist2 is \" + dist2);\n            var bestDur = Math.min(dist1, dist2);\n\n            if(bestDur == dist1){\n                console.log(\"bestDur is dist1: \" + bestDur);\n                mapUrl = mapUrl + B + \"/\" + C;\n                window.open(mapUrl, \"Google Maps\");\n\n            }\n            else if(bestDur == dist2){\n                console.log(\"bestDur is dist2: \" + bestDur);\n                mapUrl = mapUrl + C + \"/\" + B;\n                window.open(mapUrl, \"Google Maps\");\n              }\n          })()\n\n      }\n      else if (this.state.currentClick == 3){\n        if(this.state.start == null || this.state.first == null || this.state.second == null || this.state.third == null)\n        {\n          window.alert(\"Please enter an address for all the boxes\");\n          return;\n        }\n\n        mapUrl = \"https://www.google.com/maps/dir/\" + this.state.start.place + \"/\";\n        var dist1, dist2, dist3;\n        var A = this.state.start.place;\n        var B = this.state.first.place;\n        var C = this.state.second.place;\n        var D = this.state.third.place;\n\n        (async function(){\n            dist1 = await getDuration(apikey, A, B);\n            dist2 = await getDuration(apikey, A, C);\n            dist3 = await getDuration(apikey, A, D);\n            console.log(\"dist1 is \" + dist1);\n            console.log(\"dist2 is \" + dist2);\n            console.log(\"dist3 is \" + dist3);\n            var bestDur = Math.min(dist1, dist2, dist3);\n\n            if(bestDur == dist1){\n                console.log(\"bestDur is dist1: \" + bestDur);\n                mapUrl = mapUrl + B + \"/\";\n                dist1 = await getDuration(apikey, B, C);\n                dist2 = await getDuration(apikey, B, D);\n                bestDur = Math.min(dist1,dist2);\n\n                if(bestDur == dist1){\n                    mapUrl = mapUrl + C + \"/\" + D;\n                    window.open(mapUrl, \"Google Maps\");\n                }\n                else if(bestDur == dist2){\n                    mapUrl = mapUrl + D + \"/\" + C;\n                    window.open(mapUrl, \"Google Maps\");\n                } \n            }\n            else if(bestDur == dist2){\n                console.log(\"bestDur is dist2: \" + bestDur);\n                mapUrl = mapUrl + C + \"/\";\n                dist1 = await getDuration(apikey, C, B);\n                dist2 = await getDuration(apikey, C, D);\n                bestDur = Math.min(dist1,dist2);\n\n                if(bestDur === dist1){\n                    mapUrl = mapUrl + B + \"/\" + D;\n                    window.open(mapUrl, \"Google Maps\");\n                }\n                else if(bestDur === dist2){\n                    mapUrl = mapUrl + D + \"/\" + B;\n                    window.open(mapUrl, \"Google Maps\");\n                }\n              }\n            else if(bestDur == dist3){\n                console.log(\"bestDur is dist3: \" + bestDur);\n                mapUrl = mapUrl + D + \"/\";\n                dist1 = await getDuration(apikey, D, C);\n                dist2 = await getDuration(apikey, D, B);\n                bestDur = Math.min(dist1,dist2);\n\n                if(bestDur === dist1){\n                    mapUrl = mapUrl + C + \"/\" + B;\n                    window.open(mapUrl, \"Google Maps\");\n                }\n                else if(bestDur === dist2){\n                    mapUrl = mapUrl + B + \"/\" + C;\n                    window.open(mapUrl, \"Google Maps\");\n                }\n            }\n          })()\n      }\n      \n    }\n\n    toggle = () =>  {\n        \n      this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n      }\n\n    toggleButton1 = () => {\n        this.setState({\n            message: 1,\n            on:  true,\n            on2: false,\n            on3: false,\n            currentClick: 1,\n        });\n    }\n\n    toggleButton2 = () => {\n        this.setState({\n            message: 2,\n            on: true,\n            on2: true,\n            on3: false,\n            currentClick: 2,\n        });\n\n        \n    }\n\n    toggleButton3 = () => {\n        this.setState({\n            message: 3,\n            on: true,\n            on2:true,\n            on3:true,\n            currentClick: 3,\n        });\n    }\n\n   locations = () => {\n       const location = { }\n       location.start = this.state.start\n       location.first = this.state.first\n       location.second = this.state.second\n       location.third = this.state.third\n\n       //console.log(location)\n   }\n    \n  render() {\n      const {message} = this.props\n    return (\n      <div className = \"Button\" >\n        {/* <h4>The application only works with addresses within The United States, Canada, and Mexico</h4> */}\n        <h4>Please enter a starting address :</h4>\n        <p id = \"regionp\">(Within United States, Canada, or Mexico)</p>\n        {/* <Input className= \"input\" id = \"inputStart\" placeholder=\"Starting Address\"></Input> */}\n        <GoogleComponent\n            type = \"text\"\n            ref = {this.inputStart}\n            value = \"Starting Address\"\n            apiKey={apikey}\n            language={'en'}\n            country={'country:ca|country:us|country:mx'}\n            coordinates={true}\n            locationBoxStyle={'input'}\n            locationListStyle={'slide'}\n            placeholder = {\"Address, City, State ZIP\"}\n            \n            onChange={(e) => { this.setState({ start: e }) }} />\n        <p id = \"addressp\">Select the number of stops in the route, \n          followed by their addresses:</p>\n        \n        <ButtonDropdown id = \"dropDownSelect\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          {this.state.message}\n        </DropdownToggle>\n        <DropdownMenu>\n            {/* {\n                Array(this.state.numItems).fill(0).map( (_, i) => <DropdownItem key={i} onClick={this.toggleButton} >{i + 1 }</DropdownItem>)\n            } */}\n          <DropdownItem onClick ={this.toggleButton1}>1</DropdownItem>\n          <DropdownItem onClick ={this.toggleButton2}>2</DropdownItem>\n          <DropdownItem onClick ={this.toggleButton3}>3</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n         <div className =\"inputG\">\n             {this.state.on && <GoogleComponent \n             apiKey={apikey} \n             ref = \"input1\" language={'en'} country={'country:ca|country:us|country:mx'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             placeholder = {\"Address, City, State ZIP\"}\n             onChange={(e) => { this.setState({ first: e }) }} />}\n\n            {this.state.on2 && <GoogleComponent \n             apiKey={apikey} \n             ref = \"input2\" language={'en'} country={'country:ca|country:us|country:mx'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             placeholder = {\"Address, City, State ZIP\"}\n             onChange={(e) => { this.setState({ second: e }) }} />}\n\n            {this.state.on3 && <GoogleComponent \n             apiKey={apikey} \n             ref = \"input3\" key = {1} language={'en'} country={'country:ca|country:us|country:mx'} coordinates={true} locationBoxStyle={'inputA'}locationListStyle={'slide'}\n             placeholder = {\"Address, City, State ZIP\"}\n             onChange={(e) => { this.setState({ third: e }) }} /> }\n       \n        </div>\n        <div className=\"Submission\">\n        <button onClick={ (e) => { this.clicked(); } }> Submit</button>\n        </div>\n        { this.state.loading && <h5 className=\"loading\">Loading...</h5> }\n        { this.state.loading && <img className=\"image\"src={require(\"../img/sonic.gif\")}></img>}\n    \n      </div>\n      \n    )\n  }\n} \n\nexport default ButtonToggle;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ButtonToggle } from './Files/ButtonToggle'\nimport { MapContainer } from './Files/Map.js'\nimport { apiKey } from'./google_api_key.js'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n//import { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <ButtonToggle message = \"Choose...\"/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// export default GoogleApiWrapper({\n//   apiKey: (apiKey)\n// })(MapContainer)\n","import React, { Component } from 'react'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <div>\n        <Map google={this.props.google} zoom={14}>\n        <Marker onClick={this.onMarkerClick}\n                name={'Current location'} />\n        <InfoWindow onClose={this.onInfoWindowClose}>\n            <div>\n              <h1>{this.state.selectedPlace.name}</h1>\n            </div>\n        </InfoWindow>\n        </Map>         \n      </div>\n    )\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}